// The app/scripts/app.js file, which defines our AngularJS app
define(['angular',
    'uiRouter',
    // 'ngCookies',
    'ngResource',
    'ngAnimate',
    'ui.bootstrap',
    '../js/select2/select2.min',
    '../js/datatables/jquery.dataTables',
    'ui.select2',
    'controllers/index',
    'services/index',
    // 'filters/index',
    'directives/index',
    // 'scripts/directives/angular.datatables'
    ], function (ng) {
    'use strict';
  return ng.module('angularUiTestApp', [
    // 'kry_cms.filters',
    
    // 'kry_cms.directives',
    'kry_cms.controllers',
    'kry_cms.services',
    // 'ngCookies',
    'ngResource',
    'ngAnimate',
    'ui.bootstrap',
    'ui.router',
    'datatablesDirectives',
    'checklist-model',
    'ui.select2'
    ]);
});


// define([
//     'states',
//     'services/services',
//     'controllers/controllers',
//     'router/routers'
// ], function(
//     states,
//     services,
//     controllers,
//     routers

// ) {

//   'use strict';

//   angular.module('angularUiTestApp', [
//     // 'kry_cms.filters',
//     'kry_cms.services',
//     // 'kry_cms.directives',
//     'kry_cms.controllers',
//     'ngCookies',
//     'ngResource',
//     'ngAnimate',
//     'ui.bootstrap',
//     'ui.router',
//     'datatablesDirectives',
//     'checklist-model',
//     'ui.select2'
//   ])
//   .constant('url_prefix', 'http://10.188.192.200:8080')
//   .run(
//         [     '$rootScope', '$state', '$stateParams',
//         function ($rootScope,   $state,   $stateParams) {

//           $rootScope.$state = $state;
//           $rootScope.$stateParams = $stateParams;
//         }])
//   .config([ '$httpProvider',function ($httpProvider) {

//      // Use x-www-form-urlencoded Content-Type
//     $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
//     $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';
    
//     // Override $http service's default transformRequest
//     $httpProvider.defaults.transformRequest = [function(data)
//     {
//       /**
//        * The workhorse; converts an object to x-www-form-urlencoded serialization.
//        * @param {Object} obj
//        * @return {String}
//        */ 
//       var param = function(obj)
//       {
//         var query = '';
//         var name, value, fullSubName, subName, subValue, innerObj, i;
        
//         for(name in obj)
//         {
//           value = obj[name];
          
//           if(value instanceof Array)
//           {
//             for(i=0; i<value.length; ++i)
//             {
//               subValue = value[i];
//               fullSubName = name + '[' + i + ']';
//               innerObj = {};
//               innerObj[fullSubName] = subValue;
//               query += param(innerObj) + '&';
//             }
//           }
//           else if(value instanceof Object)
//           {

//             for(subName in value)
//             { 

//                 subValue = value[subName];
//                 if(subValue != null){
//                   // fullSubName = name + '[' + subName + ']';
//                    fullSubName = name + '.' + subName;
//                   // fullSubName =  subName;
//                   innerObj = {};
//                   innerObj[fullSubName] = subValue;
//                   query += param(innerObj) + '&';
//                 } 
//             }
//           }
//           else if(value !== undefined ) //&& value !== null
//           {
//             query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';
//           }
//         }
        
//         return query.length ? query.substr(0, query.length - 1) : query;
//       };
      
//       return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;
//     }];

//      $httpProvider.defaults.useXDomain = true;
//      // delete $httpProvider.defaults.headers.common['X-Requested-With'];


//     }])
// (function() {})();
// });