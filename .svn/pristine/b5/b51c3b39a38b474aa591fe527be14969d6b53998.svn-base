define(['app'], function(app) {
  return app.constant('url_prefix', 'http://10.188.192.200:8080/YIXUN_1.5_EE/')
    .run(
          ['$rootScope', '$state', '$stateParams', '$window',
          function ($rootScope,   $state,   $stateParams, $window) {

            $rootScope.$state = $state;
            $rootScope.$stateParams = $stateParams;
            $window.moment.lang('zh-cn');
          }]

    ).config(['$httpProvider','$stateProvider', '$urlRouterProvider',
    function ($httpProvider,$stateProvider,   $urlRouterProvider) {

      // Use x-www-form-urlencoded Content-Type
      $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
      $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';
      
      // Override $http service's default transformRequest
      $httpProvider.defaults.transformRequest = [function(data)
      {
        /**
         * The workhorse; converts an object to x-www-form-urlencoded serialization.
         * @param {Object} obj
         * @return {String}
         */ 
        var param = function(obj)
        {
          var query = '';
          var name, value, fullSubName, subName, subValue, innerObj, i;
          
          for(name in obj)
          {
            value = obj[name];
            
            if(value instanceof Array)
            {
              for(i=0; i<value.length; ++i)
              {
                subValue = value[i];
                fullSubName = name + '[' + i + ']';
                innerObj = {};
                innerObj[fullSubName] = subValue;
                query += param(innerObj) + '&';
              }
            }
            else if(value instanceof Object)
            {

              for(subName in value)
              { 

                  subValue = value[subName];
                  if(subValue != null){
                    // fullSubName = name + '[' + subName + ']';
                     fullSubName = name + '.' + subName;
                    // fullSubName =  subName;
                    innerObj = {};
                    innerObj[fullSubName] = subValue;
                    query += param(innerObj) + '&';
                  } 
              }
            }
            else if(value !== undefined ) //&& value !== null
            {
              query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';
            }
          }
          
          return query.length ? query.substr(0, query.length - 1) : query;
        };
        
        return angular.isObject(data) && String(data) !== '[object File]' ? param(data) : data;
      }];

       $httpProvider.defaults.useXDomain = true;
       // delete $httpProvider.defaults.headers.common['X-Requested-With'];

      /////////////////////////////
      // Redirects and Otherwise //
      /////////////////////////////

      // Use $urlRouterProvider to configure any redirects (when) and invalid urls (otherwise).
      $urlRouterProvider

      .when('/user/:id', '/contacts/:id')

        // If the url is ever invalid, e.g. '/asdf', then redirect to '/' aka the home state
        .otherwise('/');

      $stateProvider
        //////////
        // Home //
        //////////
        .state("home", {

          // Use a url of "/" to set a states as the "index".
          url: "/",
          views: {
            "menu": {
              templateUrl: 'views/menu.html',
              controller: 'menuCtrl'
            },
            'dashbord': {
              templateUrl: 'views/dashbord.html'
            }
          }
        })
        .state('login', {
            url: '/login',
            views: {
            'dashbord': {
              templateUrl: 'views/login.html',
              controller:'loginCtrl'
            }
          }
            
        })
        //首页
        .state('home.index', {
          // abstract: true,
          url: 'index?page&menuID',
          views: {
            'dashbord@':{
              templateUrl: function ($stateParams) {
                return 'views/'+$stateParams.page + '.html'
              },
              controller: 'submenuCtrl'

            }
          }
        })
    }]);
});